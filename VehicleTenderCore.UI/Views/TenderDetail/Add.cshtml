@using Microsoft.AspNetCore.Razor.TagHelpers
@model VehicleTenderCore.Entities.View.TenderDetail.TenderDetailAddVM

<div class="container">
	
	<link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />

	<form asp-action="Add" asp-controller="TenderDetail" method="post">

		@*@Html.AntiForgeryToken()*@
		<fieldset class="row">
			<div class="form-group col-md-6">
				<label asp-for="VehicleId" class="col-md-4 control-label"></label>
				<div class="inputGroupContainer">
					<div class="input-group">
						<span class="input-group-text" id="basic-addon1"><i class="fa fa-car" aria-hidden="true"></i></span>
						<select asp-for="VehicleId" asp-items="Model.Vehicles" class="form-control" required="true" id="VehicleId"><option>Plaka Seçiniz...</option></select>
						@*@Html.DropDownListFor(x => x.VehicleId, Model.Vehicles, new { @class = "form-select", required = true, id = "VehicleId" })*@
					</div>
				</div>
			</div>

			<div class="form-group col-md-6">
				<label asp-for="MinPrice" class="col-md-4 control-label"></label>
				<div class="inputGroupContainer">
					<div class="input-group">
						<span class="input-group-text" id="basic-addon1"><i class="fa fa-car" aria-hidden="true"></i></span>
						<input type="number" asp-for="MinPrice" class="form-control" placeholder="Minimum İhale Fiyatı" , required="true" , id="txtMinPrice" />
						
					</div>
				</div>
			</div>
			<div class="form-group col-md-6">
				<label asp-for="StartPrice" class="col-md-4 control-label"></label>
				<div class="inputGroupContainer">
					<div class="input-group">
						<span class="input-group-text" id="basic-addon1"><i class="fa fa-car" aria-hidden="true"></i></span>
						<input type="number" asp-for="MinPrice" class="form-control" placeholder="Başlangıç İhale Fiyatı" , required="true" , id="txtStartPrice" />
					</div>
				</div>
			</div>

			<div class="d-flex justify-content-end col-md-12">
				<input type="button" name="name" value="Kayıt Ekle" class="btn btn-outline-success col-md-3" onclick="TenderDetailAdd()" />
			</div>


			<br />
			<br />
			<br />
			<h2>İhaleye Eklenen Araçlar</h2>
			<table class="table">
				<thead>
				<th>Araç Id</th>
				<th>Minimum Fiyat</th>
				<th>Başlangıç Fiyat</th>
				</thead>
				<tbody id="TenderDetailTable">
				</tbody>
			</table>
			<div class="d-flex justify-content-end col-md-12">
				<input type="button" class="btn btn-danger col-md-3" value="Tüm Araçları Kaldır" onclick="TenderDetailClear()" />
				<input type="button" class="btn btn-success ml-3 col-md-3" value="Kaydet" onclick="TenderDetailsSave()" />
			</div>
		</fieldset>
	</form>
</div>

@section Scripts
	{
	<script>
		debugger;
		function TenderDetailAdd() {
			var vehicle = document.getElementById("VehicleId");
			var tenderDetail = {
				vehicleId: vehicle.options[vehicle.selectedIndex].value,
				licensePlate: vehicle.options[vehicle.selectedIndex].text,
				minPrice: document.getElementById("txtMinPrice").value,
				startPrice: document.getElementById("txtStartPrice").value
			};

			var tenderDetails = localStorage.getItem("tenderDetails");
			if (tenderDetails == null) {
				//boş
				var tenderDetailList = [];
				tenderDetailList.push(tenderDetail);
				localStorage.setItem("tenderDetails", JSON.stringify(tenderDetailList));
			} else {
				//dolu
				var verilerim = JSON.parse(tenderDetails);
				var isThere = 0;
				// araç listeye eklenmiş mi kontrol et
				debugger;
				for (var i = 0; i < verilerim.length; i++) {
					// listede varsa ekleme yapma
					if (verilerim[i].licensePlate == tenderDetail.licensePlate) {
						isThere = 1;
						alert("Bu araç zaten ekli");
						return;
					}
				}
				// listede yoksa ekle
				if (isThere == 0) {
					var verilerim = JSON.parse(tenderDetails);
					verilerim.push(tenderDetail);
					localStorage.setItem("tenderDetails", JSON.stringify(verilerim));
				}

			}

			GetAllTenderDetails();
			function test() {
				debugger
				console.log(x);

			}

		}

		function GetAllTenderDetails() {
			debugger;
			var veriler = localStorage.getItem("tenderDetails");
			veriler = JSON.parse(veriler);
			var licensePlate = ""
			var minPrice = ""
			var startPrice = "";
			var tablo = "";
			for (var i = 0; i < veriler.length; i++) {
				licensePlate = veriler[i].licensePlate
				minPrice = veriler[i].minPrice
				startPrice = veriler[i].startPrice
				tablo += "<tr><td>" + licensePlate + "</td><td>" + minPrice + "</td><td>" + startPrice + "</td></tr>\n";
			}
			document.getElementById("TenderDetailTable").innerHTML = tablo
		}

		function TenderDetailClear() {
			localStorage.clear();
			alert("İhale Detayları Temizlendi");

		}

		// ihaleye eklenen araçlar post ediliyor
		function TenderDetailsSave() {
			debugger;
			var list = JSON.parse(localStorage.getItem("tenderDetails"));

			$.ajax({
				type: "POST",
				url: "/TenderDetail/Add",
				data: { jsonData: JSON.stringify(list) },
				success: function (result) {
					debugger;
					localStorage.removeItem("tenderDetails");
					alert("İhale oluşturuldu")
					window.location.href = "@Url.Action("Index","Tender")";
				},
				error: function () {
					alert("Hata")
				}
			});
		}

	</script>

}
